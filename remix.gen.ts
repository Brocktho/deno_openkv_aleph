// DO NOT EDIT. This file is generated by remix-deno-jit.
// This file SHOULD be checked into source version control.
// This file is automatically updated during development when running `deno task dev`.

import * as serverEntry from "./app/entry.server.tsx";
import * as route0 from "./app/root.tsx";
import * as route1 from "./app/routes/blog.upsert.($blog_id).tsx";
import * as route2 from "./app/routes/blog_.$blog_id.tsx";
import * as route3 from "./app/routes/logs.visitors.ts";
import * as route4 from "./app/routes/logs.route.ts";
import * as route5 from "./app/routes/logs.time.ts";
import * as route6 from "./app/routes/_index.tsx";
import * as route7 from "./app/routes/todos.tsx";
import * as route8 from "./app/routes/logs.tsx";
import * as route9 from "./app/routes/blog.tsx";

export const entry = { module: serverEntry };
export const routes = {
	"root": {
		id: "root",
		module: route0,
		file: "./app/root.tsx",
	},
	"routes/blog/upsert/($blog_id)": {
		id: "routes/blog/upsert/($blog_id)",
		path: "upsert/:blog_id?",
		parentId: "routes/blog",
		module: route1,
		file: "./app/routes/blog.upsert.($blog_id).tsx",
	},
	"routes/blog_/$blog_id": {
		id: "routes/blog_/$blog_id",
		path: "blog/:blog_id",
		parentId: "root",
		module: route2,
		file: "./app/routes/blog_.$blog_id.tsx",
	},
	"routes/logs/visitors": {
		id: "routes/logs/visitors",
		path: "visitors",
		parentId: "routes/logs",
		module: route3,
		file: "./app/routes/logs.visitors.ts",
	},
	"routes/logs/route": {
		id: "routes/logs/route",
		path: "route",
		parentId: "routes/logs",
		module: route4,
		file: "./app/routes/logs.route.ts",
	},
	"routes/logs/time": {
		id: "routes/logs/time",
		path: "time",
		parentId: "routes/logs",
		module: route5,
		file: "./app/routes/logs.time.ts",
	},
	"routes/_index": {
		id: "routes/_index",
		index: true,
		parentId: "root",
		module: route6,
		file: "./app/routes/_index.tsx",
	},
	"routes/todos": {
		id: "routes/todos",
		path: "todos",
		parentId: "root",
		module: route7,
		file: "./app/routes/todos.tsx",
	},
	"routes/logs": {
		id: "routes/logs",
		path: "logs",
		parentId: "root",
		module: route8,
		file: "./app/routes/logs.tsx",
	},
	"routes/blog": {
		id: "routes/blog",
		path: "blog",
		parentId: "root",
		module: route9,
		file: "./app/routes/blog.tsx",
	},
};
export const assets = {
  entry: { imports: [], module: "/entry.client.js" },
  routes: {
		"root": {
			id: "root",
			imports: [],
			module: "/root.js",
			hasAction: "action" in route0,
			hasLoader: "loader" in route0,
			hasCatchBoundary: "CatchBoundary" in route0,
			hasErrorBoundary: "ErrorBoundary" in route0,
		},
			"routes/blog/upsert/($blog_id)": {
			id: "routes/blog/upsert/($blog_id)",
			path: "upsert/:blog_id?",
			parentId: "routes/blog",
			imports: [],
			module: "/routes/blog/upsert/($blog_id).js",
			hasAction: "action" in route1,
			hasLoader: "loader" in route1,
			hasCatchBoundary: "CatchBoundary" in route1,
			hasErrorBoundary: "ErrorBoundary" in route1,
		},
			"routes/blog_/$blog_id": {
			id: "routes/blog_/$blog_id",
			path: "blog/:blog_id",
			parentId: "root",
			imports: [],
			module: "/routes/blog_/$blog_id.js",
			hasAction: "action" in route2,
			hasLoader: "loader" in route2,
			hasCatchBoundary: "CatchBoundary" in route2,
			hasErrorBoundary: "ErrorBoundary" in route2,
		},
			"routes/logs/visitors": {
			id: "routes/logs/visitors",
			path: "visitors",
			parentId: "routes/logs",
			imports: [],
			module: "/routes/logs/visitors.js",
			hasAction: "action" in route3,
			hasLoader: "loader" in route3,
			hasCatchBoundary: "CatchBoundary" in route3,
			hasErrorBoundary: "ErrorBoundary" in route3,
		},
			"routes/logs/route": {
			id: "routes/logs/route",
			path: "route",
			parentId: "routes/logs",
			imports: [],
			module: "/routes/logs/route.js",
			hasAction: "action" in route4,
			hasLoader: "loader" in route4,
			hasCatchBoundary: "CatchBoundary" in route4,
			hasErrorBoundary: "ErrorBoundary" in route4,
		},
			"routes/logs/time": {
			id: "routes/logs/time",
			path: "time",
			parentId: "routes/logs",
			imports: [],
			module: "/routes/logs/time.js",
			hasAction: "action" in route5,
			hasLoader: "loader" in route5,
			hasCatchBoundary: "CatchBoundary" in route5,
			hasErrorBoundary: "ErrorBoundary" in route5,
		},
			"routes/_index": {
			id: "routes/_index",
			index: true,
			parentId: "root",
			imports: [],
			module: "/routes/_index.js",
			hasAction: "action" in route6,
			hasLoader: "loader" in route6,
			hasCatchBoundary: "CatchBoundary" in route6,
			hasErrorBoundary: "ErrorBoundary" in route6,
		},
			"routes/todos": {
			id: "routes/todos",
			path: "todos",
			parentId: "root",
			imports: [],
			module: "/routes/todos.js",
			hasAction: "action" in route7,
			hasLoader: "loader" in route7,
			hasCatchBoundary: "CatchBoundary" in route7,
			hasErrorBoundary: "ErrorBoundary" in route7,
		},
			"routes/logs": {
			id: "routes/logs",
			path: "logs",
			parentId: "root",
			imports: [],
			module: "/routes/logs.js",
			hasAction: "action" in route8,
			hasLoader: "loader" in route8,
			hasCatchBoundary: "CatchBoundary" in route8,
			hasErrorBoundary: "ErrorBoundary" in route8,
		},
			"routes/blog": {
			id: "routes/blog",
			path: "blog",
			parentId: "root",
			imports: [],
			module: "/routes/blog.js",
			hasAction: "action" in route9,
			hasLoader: "loader" in route9,
			hasCatchBoundary: "CatchBoundary" in route9,
			hasErrorBoundary: "ErrorBoundary" in route9,
		},		
},
};
export const future = {
    v2_errorBoundary: true,
    v2_headers: true,
    v2_meta: true,
    v2_normalizeFormMethod: true,
    v2_routeConvention: true,
    v2_dev: true,
};
